<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Business.Core</name>
    </assembly>
    <members>
        <member name="F:Business.BusinessLogType.Exception">
            <summary>
            Exception = 0
            </summary>
        </member>
        <member name="F:Business.BusinessLogType.Record">
            <summary>
            Record = 1
            </summary>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Bge(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.Label)">
            <summary>
            Transfers control to a target instruction if the first value is greater than
            or equal to the second value.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="label">The label.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Bge_S(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.Label)">
            <summary>
            Transfers control to a target instruction (short form) if the first value 
            is greater than or equal to the second value.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="label">The label.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Box(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            Converts a value type to an object reference (type O).
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="type">The value type.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Br(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.Label)">
            <summary>
            Unconditionally transfers control to a target instruction.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="label">The label.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Br_S(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.Label)">
            <summary>
            Unconditionally transfers control to a target instruction (short form).
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="label">The label.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Brfalse(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.Label)">
            <summary>
            Transfers control to a target instruction if value is <c>false</c>, 
            a null reference, or zero. 
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="label">The label.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Brfalse_S(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.Label)">
            <summary>
            Transfers control to a target instruction (short form) if value is <c>false</c>, 
            a null reference, or zero. 
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="label">The label.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Brtrue(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.Label)">
            <summary>
            Transfers control to a target instruction if value is <c>true</c>, 
            not null, or non-zero.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="label">The label.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Brtrue_S(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.Label)">
            <summary>
            Transfers control to a target instruction (short form) if value is <c>true</c>, 
            not null, or non-zero.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="label">The label.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Call(System.Reflection.Emit.ILGenerator,System.Reflection.MethodInfo)">
            <summary>
            Calls the method indicated by the passed method descriptor.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="methodInfo">The mechod to call.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Callvirt(System.Reflection.Emit.ILGenerator,System.Reflection.MethodInfo)">
            <summary>
            Calls a late-bound method on an object, pushing the return value onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="methodInfo">The mechod to call.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Castclass(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            Attempts to cast an object passed by reference to the specified class.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="type">The target class.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Conv_I(System.Reflection.Emit.ILGenerator)">
            <summary>
            Converts the value on top of the evaluation stack to native int.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Conv_I1(System.Reflection.Emit.ILGenerator)">
            <summary>
            Converts the value on top of the evaluation stack to int8, then extends (pads) it to int32.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Conv_I2(System.Reflection.Emit.ILGenerator)">
            <summary>
            Converts the value on top of the evaluation stack to int16, then extends (pads) it to int32.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Conv_I4(System.Reflection.Emit.ILGenerator)">
            <summary>
            Converts the value on top of the evaluation stack to int32.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Conv_I8(System.Reflection.Emit.ILGenerator)">
            <summary>
            Converts the value on top of the evaluation stack to int64.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Initobj(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            Initializes each field of the value type at a specified address to a null reference 
            or a 0 of the appropriate primitive type.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="type">The value type.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldarg_0(System.Reflection.Emit.ILGenerator)">
            <summary>
            Loads the argument at index 0 onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldarg_1(System.Reflection.Emit.ILGenerator)">
            <summary>
            Loads the argument at index 1 onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldarg_2(System.Reflection.Emit.ILGenerator)">
            <summary>
            Loads the argument at index 2 onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldarg_3(System.Reflection.Emit.ILGenerator)">
            <summary>
            Loads the argument at index 3 onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldarg_S(System.Reflection.Emit.ILGenerator,System.Byte)">
            <summary>
            Loads the argument (referenced by a specified short form index) onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="index">The index.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldarg(System.Reflection.Emit.ILGenerator,System.Int16)">
            <summary>
            Loads an argument (referenced by a specified index value) onto the stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="index">The index.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldarga_S(System.Reflection.Emit.ILGenerator,System.Byte)">
            <summary>
            Load an argument address, in short form, onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="index">The index.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldarga(System.Reflection.Emit.ILGenerator,System.Int16)">
            <summary>
            Load an argument address onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="index">The index.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldfld(System.Reflection.Emit.ILGenerator,System.Reflection.FieldInfo)">
            <summary>
            Finds the value of a field in the object whose reference is currently on the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="fieldInfo">The target field.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_I4_M1(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pushes the integer value of -1 onto the evaluation stack as an int32.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_I4_0(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pushes the integer value of 0 onto the evaluation stack as an int32.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_I4_1(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pushes the integer value of 1 onto the evaluation stack as an int32.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_I4_2(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pushes the integer value of 2 onto the evaluation stack as an int32.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_I4_3(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pushes the integer value of 3 onto the evaluation stack as an int32.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_I4_4(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pushes the integer value of 4 onto the evaluation stack as an int32.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_I4_5(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pushes the integer value of 5 onto the evaluation stack as an int32.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_I4_6(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pushes the integer value of 6 onto the evaluation stack as an int32.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_I4_7(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pushes the integer value of 7 onto the evaluation stack as an int32.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_I4_8(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pushes the integer value of 8 onto the evaluation stack as an int32.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_I4_S(System.Reflection.Emit.ILGenerator,System.Byte)">
            <summary>
            Pushes the supplied int8 value onto the evaluation stack as an int32, short form.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="value">The value.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_I4(System.Reflection.Emit.ILGenerator,System.Int32)">
            <summary>
            Pushes a supplied value of type int32 onto the evaluation stack as an int32.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="value">The value.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_I8(System.Reflection.Emit.ILGenerator,System.Int64)">
            <summary>
            Pushes a supplied value of type int64 onto the evaluation stack as an int64.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="value">The value.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_R4(System.Reflection.Emit.ILGenerator,System.Single)">
            <summary>
            Pushes a supplied value of type float32 onto the evaluation stack as type F (float).
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="value">The value.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldc_R8(System.Reflection.Emit.ILGenerator,System.Double)">
            <summary>
            Pushes a supplied value of type float64 onto the evaluation stack as type F (float).
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="value">The value.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldelem_Ref(System.Reflection.Emit.ILGenerator)">
            <summary>
            Loads the element containing an object reference at a specified array index onto 
            the top of the evaluation stack as type O (object reference).
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldlen(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pushes the number of elements of a zero-based, one-dimensional array onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldloc_0(System.Reflection.Emit.ILGenerator)">
            <summary>
            Loads the local variable at index 0 onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldloc_1(System.Reflection.Emit.ILGenerator)">
            <summary>
            Loads the local variable at index 1 onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldloc_2(System.Reflection.Emit.ILGenerator)">
            <summary>
            Loads the local variable at index 2 onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldloc_3(System.Reflection.Emit.ILGenerator)">
            <summary>
            Loads the local variable at index 3 onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldloc_S(System.Reflection.Emit.ILGenerator,System.Byte)">
            <summary>
            Loads the local variable at a specific index onto the evaluation stack, short form.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="index">The index.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldloc_S(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.LocalBuilder)">
            <summary>
            Loads the local variable at a specific index onto the evaluation stack, short form.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="localBuilder">The instance of <see cref="!:LocalBuilder"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldloc(System.Reflection.Emit.ILGenerator,System.Int16)">
            <summary>
            Loads the local variable at a specific index onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="index">The index.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldloc(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.LocalBuilder)">
            <summary>
            Loads the local variable at a specific index onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="localBuilder">The instance of <see cref="!:LocalBuilder"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldloca_S(System.Reflection.Emit.ILGenerator,System.Byte)">
            <summary>
            Loads the address of the local variable at a specific index onto
            the evaluation stack, short form.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="index">The index.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldloca(System.Reflection.Emit.ILGenerator,System.Int16)">
            <summary>
            Loads the address of the local variable at a specific index onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="index">The index.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldsfld(System.Reflection.Emit.ILGenerator,System.Reflection.FieldInfo)">
            <summary>
            Pushes the value of a static field onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="fieldInfo">The static field.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ldstr(System.Reflection.Emit.ILGenerator,System.String)">
            <summary>
            Pushes a new object reference to a string literal stored in the metadata.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="value">The string.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Newobj(System.Reflection.Emit.ILGenerator,System.Reflection.ConstructorInfo)">
            <summary>
            Creates a new object or a new instance of a value type, pushing an object reference (type O) 
            onto the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="constructorInfo">The constructor of the type.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Ret(System.Reflection.Emit.ILGenerator)">
            <summary>
            Returns from the current method, pushing a return value (if present) from 
            the callee's evaluation stack onto the caller's evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Stfld(System.Reflection.Emit.ILGenerator,System.Reflection.FieldInfo)">
            <summary>
            Replaces the value stored in the field of an object reference or pointer with a new value.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="fieldInfo">The target field.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Stloc_0(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pops the current value from the top of the evaluation stack and stores it 
            in a the local variable list at index 0.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Stloc_1(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pops the current value from the top of the evaluation stack and stores it 
            in a the local variable list at index 1.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Stloc_2(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pops the current value from the top of the evaluation stack and stores it 
            in a the local variable list at index 2.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Stloc_3(System.Reflection.Emit.ILGenerator)">
            <summary>
            Pops the current value from the top of the evaluation stack and stores it 
            in a the local variable list at index 3.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Stloc_S(System.Reflection.Emit.ILGenerator,System.Byte)">
            <summary>
            Pops the current value from the top of the evaluation stack and stores it 
            in a the local variable list at index (short form).
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="index">The index.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Stloc_S(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.LocalBuilder)">
            <summary>
            Pops the current value from the top of the evaluation stack and stores it 
            in a the local variable list at index (short form).
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="localBuilder">The instance of <see cref="!:LocalBuilder"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Stloc(System.Reflection.Emit.ILGenerator,System.Int16)">
            <summary>
            Pops the current value from the top of the evaluation stack and stores it 
            in a the local variable list at a specified index.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="index">The index.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Stloc(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.LocalBuilder)">
            <summary>
            Pops the current value from the top of the evaluation stack and stores it 
            in a the local variable list at a specified index.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="localBuilder">The instance of <see cref="!:LocalBuilder"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Stsfld(System.Reflection.Emit.ILGenerator,System.Reflection.FieldInfo)">
            <summary>
            Replaces the value of a static field with a value from the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="fieldInfo">The static field.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Throw(System.Reflection.Emit.ILGenerator)">
            <summary>
            Throws the exception object currently on the evaluation stack.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Unbox(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            Converts the boxed representation of a value type to its unboxed form.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="type">The value type.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Emit.OpCodeExtention.Unbox_Any(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            Converts the boxed representation of a type specified 
            in the instruction to its unboxed form.
            </summary>
            <param name="il">The instance of <see cref="!:ILGenerator"/>.</param>
            <param name="type">The type.</param>
            <returns>The instance of <see cref="!:ILGenerator"/>.</returns>
        </member>
        <member name="M:Business.Extensions.Help.GetAttributes``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
            <summary>
              Gets the attributes.
            </summary>
            <param name = "member">The member.</param>
            <returns>The member attributes.</returns>
        </member>
        <member name="M:Business.Extensions.Help.GZipCompressByte(System.Byte[])">
            <summary>
            gzip to byte[]
            </summary>
            <param name="value">byte[]</param>
            <returns>byte[]</returns>
        </member>
        <member name="M:Business.Extensions.Help.GZipDecompressByte(System.Byte[])">
            <summary>
            gzip to byte[]
            </summary>
            <param name="value">byte[]</param>
            <returns>byte[]</returns>
        </member>
        <member name="M:Business.Extensions.Help.GZipDecompressStream(System.Byte[])">
            <summary>
            gzip to byte[]
            </summary>
            <param name="value">byte[]</param>
            <returns>MemoryStream</returns>
        </member>
        <member name="M:Business.Result.IResult.ToDataString">
            <summary>
            Json Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Business.Result.IResult.ToDataBytes">
            <summary>
            ProtoBuf Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Business.Result.IResult.ToBytes">
            <summary>
            ProtoBuf
            </summary>
            <returns></returns>
        </member>
        <member name="M:Business.Result.IResult.ToString">
            <summary>
            Json
            </summary>
            <returns></returns>
        </member>
        <member name="P:Business.Result.IResult.State">
            <summary>
            The results of the state is greater than or equal to 1: success, equal to 0: not to capture the system level exceptions, less than 0: business class error.
            </summary>
        </member>
        <member name="P:Business.Result.IResult.Message">
            <summary>
            Success can be null
            </summary>
        </member>
        <member name="P:Business.Result.IResult.Data">
            <summary>
            Specific Byte/Json data objects
            </summary>
        </member>
        <member name="P:Business.Result.IResult.HasData">
            <summary>
            Whether there is value
            </summary>
        </member>
        <member name="P:Business.Result.IResult.Callback">
            <summary>
            Gets the token of this result, used for callback
            </summary>
        </member>
        <member name="P:Business.Result.IResult`1.Data">
            <summary>
            Specific Byte/Json data objects
            </summary>
        </member>
        <member name="M:Business.Result.ResultBase`1.ToDataString">
            <summary>
            Json Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Business.Result.ResultBase`1.ToBytes">
            <summary>
            ProtoBuf
            </summary>
            <returns></returns>
        </member>
        <member name="M:Business.Result.ResultBase`1.ToDataBytes">
            <summary>
            ProtoBuf Data
            </summary>
            <returns></returns>
        </member>
        <member name="P:Business.Result.ResultBase`1.State">
            <summary>
            The results of the state is greater than or equal to 1: success, equal to 0: not to capture the system level exceptions, less than 0: business class error.
            </summary>
        </member>
        <member name="P:Business.Result.ResultBase`1.Message">
            <summary>
            Success can be null
            </summary>
        </member>
        <member name="P:Business.Result.ResultBase`1.Business#Result#IResult#Data">
            <summary>
            Specific dynamic data objects
            </summary>
        </member>
        <member name="P:Business.Result.ResultBase`1.Data">
            <summary>
            Specific Byte/Json data objects
            </summary>
        </member>
        <member name="P:Business.Result.ResultBase`1.HasData">
            <summary>
            Whether there is value
            </summary>
        </member>
        <member name="P:Business.Result.ResultBase`1.Callback">
            <summary>
            Gets the token of this result, used for callback
            </summary>
        </member>
    </members>
</doc>
